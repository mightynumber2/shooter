diff --git a/globals/globals.gd b/globals/globals.gd
index 1e5d43b..6c4e1a6 100644
--- a/globals/globals.gd
+++ b/globals/globals.gd
@@ -1,4 +1,16 @@
 extends Node
 
-var laser_amount: int = 20
-var grenade_amount: int = 5
+signal stat_change
+
+var laser_amount: int = 20:
+	set(value):
+		laser_amount = value
+		stat_change.emit()
+var grenade_amount: int = 5:
+	set(value):
+		grenade_amount = value
+		stat_change.emit()
+var health = 60:
+	set(value):
+		health = value
+		stat_change.emit()
diff --git a/scenes/items/item.gd b/scenes/items/item.gd
index 51dbc42..aed1c5c 100644
--- a/scenes/items/item.gd
+++ b/scenes/items/item.gd
@@ -3,7 +3,7 @@ extends Area2D
 var rotation_speed: int = 4
 var available_options = ["laser", "laser", "laser", "laser", "grenade", "health"]
 var type = available_options.pick_random()
-
+	
 func _ready() -> void:
 	if type == "laser":
 		$Sprite2D.modulate = Color(0.1, 0.2, 0.8)
@@ -16,6 +16,11 @@ func _process(delta: float) -> void:
 	rotation += rotation_speed * delta
 
 
-func _on_body_entered(body: Node2D) -> void:
-	body.add_item(type)
+func _on_body_entered(_body: Node2D) -> void:
+	if type == "health":
+		Globals.health += 10
+	if type == "laser":
+		Globals.laser_amount += 5
+	if type == "grenade":
+		Globals.grenade_amount += 1
 	queue_free()
diff --git a/scenes/levels/level.tscn b/scenes/levels/level.tscn
index 7b89cdd..91a060a 100644
--- a/scenes/levels/level.tscn
+++ b/scenes/levels/level.tscn
@@ -26,4 +26,3 @@ rotation_smoothing_enabled = true
 
 [connection signal="grenade" from="Player" to="." method="_on_player_grenade"]
 [connection signal="laser" from="Player" to="." method="_on_player_laser"]
-[connection signal="update_stats" from="Player" to="." method="_on_player_update_stats"]
diff --git a/scenes/player/player.gd b/scenes/player/player.gd
index 1a93b5b..798eb4c 100644
--- a/scenes/player/player.gd
+++ b/scenes/player/player.gd
@@ -2,7 +2,6 @@ extends CharacterBody2D
 
 signal laser(pos, direction)
 signal grenade(pos, direction)
-signal update_stats
 
 var can_laser: bool = true
 var can_grenade: bool = true
@@ -45,9 +44,3 @@ func _on_laser_reload_timer_timeout() -> void:
 func _on_grenade_reload_timer_timeout() -> void:
 	can_grenade = true
 	
-func add_item(type: String) -> void:
-	if type == "laser":
-		Globals.laser_amount += 5
-	if type == "grenade":
-		Globals.grenade_amount += 1
-	update_stats.emit()
diff --git a/scenes/user interface/ui.gd b/scenes/user interface/ui.gd
index 7d3ebe2..aa55246 100644
--- a/scenes/user interface/ui.gd	
+++ b/scenes/user interface/ui.gd	
@@ -7,10 +7,14 @@ var red: Color = Color(0.9, 0, 0, 1)
 @onready var grenade_label: Label = $GrenadeCounter/VBoxContainer/Label
 @onready var laser_icon: TextureRect = $LaserCounter/VBoxContainer/TextureRect
 @onready var grenade_icon: TextureRect = $GrenadeCounter/VBoxContainer/TextureRect
+@onready var health_bar: TextureProgressBar = $MarginContainer/TextureProgressBar
 
 func _ready() -> void:
+	Globals.connect("stat_change", update_stat_text)
 	update_laser_text()
 	update_grenade_text()
+	update_health_text()
+
 
 func update_laser_text():
 	laser_label.text = str(Globals.laser_amount)
@@ -20,6 +24,14 @@ func update_grenade_text():
 	grenade_label.text = str(Globals.grenade_amount)
 	update_color(Globals.grenade_amount, grenade_label, grenade_icon)
 	
+func update_health_text():
+	health_bar.value = Globals.health
+	
+func update_stat_text():
+	update_laser_text()
+	update_grenade_text()
+	update_health_text()
+	
 func update_color(amount: int, label: Label, icon: TextureRect) -> void:
 	if amount > 0:
 		label.modulate = green
